@model IEnumerable<Category>

@{
    ViewData["Title"] = "Category";
}
<!--Category Header-->
<div class="card shadow-sm category-header shadow">
    <div class="card-header">        
        <h3 class="card-title fw-bolder fs-1">
            <div class="symbol symbol-35px me-3">
                <div class="symbol-label fs-2 fw-semibold bg-light text-inverse-primary">
                    <span class="svg-icon svg-icon-2x svg-icon-primary">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path opacity="0.3" d="M21.25 18.525L13.05 21.825C12.35 22.125 11.65 22.125 10.95 21.825L2.75 18.525C1.75 18.125 1.75 16.725 2.75 16.325L4.04999 15.825L10.25 18.325C10.85 18.525 11.45 18.625 12.05 18.625C12.65 18.625 13.25 18.525 13.85 18.325L20.05 15.825L21.35 16.325C22.35 16.725 22.35 18.125 21.25 18.525ZM13.05 16.425L21.25 13.125C22.25 12.725 22.25 11.325 21.25 10.925L13.05 7.62502C12.35 7.32502 11.65 7.32502 10.95 7.62502L2.75 10.925C1.75 11.325 1.75 12.725 2.75 13.125L10.95 16.425C11.65 16.725 12.45 16.725 13.05 16.425Z" fill="currentColor" />
                            <path d="M11.05 11.025L2.84998 7.725C1.84998 7.325 1.84998 5.925 2.84998 5.525L11.05 2.225C11.75 1.925 12.45 1.925 13.15 2.225L21.35 5.525C22.35 5.925 22.35 7.325 21.35 7.725L13.05 11.025C12.45 11.325 11.65 11.325 11.05 11.025Z" fill="currentColor" />
                        </svg>
                    </span>
                </div>
            </div>
            Categories
        </h3>        
        <div class="card-toolbar">
            <!--begin::Search-->
            <div class="d-flex align-items-center position-relative my-1 me-4">
                <i class="ki-duotone ki-magnifier fs-1 position-absolute ms-6">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M21.7 18.9L18.6 15.8C17.9 16.9 16.9 17.9 15.8 18.6L18.9 21.7C19.3 22.1 19.9 22.1 20.3 21.7L21.7 20.3C22.1 19.9 22.1 19.3 21.7 18.9Z" fill="currentColor" />
                        <path opacity="0.3" d="M11 20C6 20 2 16 2 11C2 6 6 2 11 2C16 2 20 6 20 11C20 16 16 20 11 20ZM11 4C7.1 4 4 7.1 4 11C4 14.9 7.1 18 11 18C14.9 18 18 14.9 18 11C18 7.1 14.9 4 11 4ZM8 11C8 9.3 9.3 8 11 8C11.6 8 12 7.6 12 7C12 6.4 11.6 6 11 6C8.2 6 6 8.2 6 11C6 11.6 6.4 12 7 12C7.6 12 8 11.6 8 11Z" fill="currentColor" />
                    </svg>
                    <span class="path2"></span>
                </i>
                <input type="text" data-kt-docs-table-filter="search" class="form-control form-control-solid w-250px ps-15" placeholder="Search Customers" />
            </div>
            <!--end::Search-->
            <a href="javascript:;" class="btn btn-sm btn-light btn-primary fs-4 fw-bolder js-render-modal" data-title="Add Category" data-url="/Categories/Add">
                <i class="bi bi-plus-square-dotted"></i>
                Add Category
            </a>
        </div>
    </div>
</div>

<!--Category Cards-->
<div class="row">
    <div class="d-flex"></div>
    @if (!Model.Any())
    {
        <div class="alert alert-warning d-flex align-items-center p-5 mb-10">
            <i class="ki-duotone ki-shield-tick fs-1 text-warning me-4">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <rect opacity="0.3" x="2" y="2" width="20" height="20" rx="10" fill="currentColor" />
                    <rect x="11" y="14" width="7" height="2" rx="1" transform="rotate(-90 11 14)" fill="currentColor" />
                    <rect x="11" y="17" width="2" height="2" rx="1" transform="rotate(-90 11 17)" fill="currentColor" />
                </svg>
            </i>
            <div class="d-flex flex-column">
                <span class="text-dark fs-3 fw-bold">No Category Found!</span>
            </div>
        </div>
    }
    else
    {
        <div class="table-responsive shadow">
            <table class="table category-table table-row-dashed table-row-gray-300 gy-7">
                <thead>
                    <tr class="fw-bold fs-4 text-gray-800">
                        <th>Category Name</th>
                        <th>Status</th>
                        <th>Creation Date</th>
                        <th>Last Update Date</th>
                       <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Model)
                    {
                       <partial name="_CategoryRow" model="@category" />
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@Html.AntiForgeryToken()

@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function () {
            $('body').delegate('.js-toggle-status', 'click', function () {
                var btn = $(this);

                bootbox.confirm({
                    message: "Are you sure that you need to toggle this item status?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-danger'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-secondary'
                        }
                    },
                    callback: function (result) {
                        if (result) {
                            $.post({
                                url: '/Categories/ToggleStatus/' + btn.data('id'),
                                data: {
                                    '__RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                                },
                                success: function (lastUpdatedOn) {
                                    var row = btn.parents('tr');
                                    var status = row.find('.js-status');
                                    var newStatus = status.text().trim() === 'Deleted' ? 'Available' : 'Deleted';
                                    status.text(newStatus).toggleClass('badge-light-success badge-light-danger');
                                    row.find('.js-updated-on').html(lastUpdatedOn);
                                    row.addClass('animate__animated animate__shakeX');                                  
                                    toastr.options = {
                                        "closeButton": true,
                                        "debug": false,
                                        "newestOnTop": true,
                                        "progressBar": false,
                                        "positionClass": "toastr-bottom-right",
                                        "preventDuplicates": true,
                                        "onclick": null,
                                        "showDuration": "300",
                                        "hideDuration": "1000",
                                        "timeOut": "3000",
                                        "extendedTimeOut": "1000",
                                        "showEasing": "swing",
                                        "hideEasing": "linear",
                                        "showMethod": "fadeIn",
                                        "hideMethod": "fadeOut"
                                    };

                                    toastr.success("Updated Successfully!");
                                    ShowSuccessMessage();
                                },
                                error: function () {
                                    ShowErrorMessage();
                                }
                            });
                        }
                    }
                });
            });
        });
    </script>
}